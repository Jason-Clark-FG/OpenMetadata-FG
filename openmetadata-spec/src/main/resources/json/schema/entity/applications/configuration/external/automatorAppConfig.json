{
  "$id": "https://open-metadata.org/schema/entity/applications/configuration/external/automatorAppConfig.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AutomatorAppConfig",
  "description": "Configuration for the Automator External Application.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.app.external.AutomatorAppConfig",
  "definitions": {
    "automatorAppType": {
      "description": "Application type.",
      "type": "string",
      "enum": ["Automator"],
      "default": "Automator"
    },
    "resourceFilter": {
      "description": "Filter configuration for a specific entity type.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the entity. E.g., 'table', 'chart', 'dashboard', etc.",
          "type": "string"
        },
        "queryFilter": {
          "description": "Query filter to be passed to ES for this specific entity type. E.g., `{\"query\":{\"bool\":{\"must\":[{\"bool\":{\"should\":[{\"term\":{\"domain.displayName.keyword\":\"DG Anim\"}}]}}]}}}`. This is the same payload as in the Explore page.",
          "type": "string"
        },
        "filterJsonTree": {
          "description": "Filter JSON tree to be used for rendering the filters in the UI for this specific entity type. This comes from Immutable Tree type of react-awesome-query-builder.",
          "type": "string"
        }
      },
      "required": ["type"]
    },
    "resource": {
      "description": "Entities selected to run the automation with optional per-type filters.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Types of entities to include. When filters are specified, this is derived from the filters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queryFilter": {
          "description": "Global query filter applied to all entity types (deprecated, use filters instead).",
          "type": "string"
        },
        "filterJsonTree": {
          "description": "Global filter JSON tree (deprecated, use filters instead).",
          "type": "string"
        },
        "filters": {
          "description": "Per-entity-type filter configurations. Each filter specifies the entity type and its specific query filters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceFilter"
          }
        }
      }
    },
    "action": {
      "description": "Action to take on those entities. E.g., propagate description through lineage, auto tagging, etc.",
      "oneOf": [
        {
          "$ref": "automator/addTagsAction.json"
        },
        {
          "$ref": "automator/removeTagsAction.json"
        },
        {
          "$ref": "automator/addTermsAction.json"
        },
        {
          "$ref": "automator/removeTermsAction.json"
        },
        {
          "$ref": "automator/addDomainAction.json"
        },
        {
          "$ref": "automator/removeDomainAction.json"
        },
        {
          "$ref": "automator/addDescriptionAction.json"
        },
        {
          "$ref": "automator/addCustomProperties.json"
        },
        {
          "$ref": "automator/removeDescriptionAction.json"
        },
        {
          "$ref": "automator/addTierAction.json"
        },
        {
          "$ref": "automator/removeTierAction.json"
        },
        {
          "$ref": "automator/addTestCaseAction.json"
        },
        {
          "$ref": "automator/removeTestCaseAction.json"
        },
        {
          "$ref": "automator/addOwnerAction.json"
        },
        {
          "$ref": "automator/removeOwnerAction.json"
        },
        {
          "$ref": "automator/removeCustomPropertiesAction.json"
        },
        {
          "$ref": "automator/addDataProductAction.json"
        },
        {
          "$ref": "automator/removeDataProductAction.json"
        },
        {
          "$ref": "automator/lineagePropagationAction.json"
        },
        {
          "$ref": "automator/mlTaggingAction.json"
        }
      ]
    }
  },
  "properties": {
    "type": {
      "title": "Application Type",
      "description": "Application Type",
      "$ref": "#/definitions/automatorAppType",
      "default": "Automator"
    },
    "resources": {
      "description": "Entities selected to run the automation.",
      "$ref": "#/definitions/resource"
    },
    "actions": {
      "description": "Action to take on those entities. E.g., propagate description through lineage, auto tagging, etc.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/action"
      }
    }
  },
  "required": ["type", "resources", "actions"],
  "additionalProperties": false
}
